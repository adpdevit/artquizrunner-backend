openapi: 3.0.1
info:
  title: ArtQuiz Backend definition
  version: v1
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/admin/question:
    post:
      tags:
        - Admin
      operationId: addQuestion
      description: Send a new question available in game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '201':
          description: Created - Cookie / Header contains game state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
        '400':
          description: wrong schem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
  /api/player/quiz/state:
    get:
      tags:
        - Quiz
      operationId: getInitialQuizState
      description: Get initial quiz state
      responses:
        '200':
          description: OK - Cookie / Header contains quiz state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizState'
  /api/player/quiz/answer:
    post:
      tags:
        - Quiz
      operationId: handlePlayerChoice
      description: Send the curent player choice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAnswer'
      responses:
        '200':
          description: OK - Cookie / Header contains game state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuizState'
        '400':
          description: Missing JWT state or wrong schem
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDescription'
components: {
  schemas: {
    QuizState: {
      type: object,
      properties: {
        nextQuestion: {
          $ref: '#/components/schemas/Question'
        },
        gameState: {
          $ref: '#/components/schemas/GameState'
        }
      }
    },
    GameState: {
      type: object,
      properties: {
        currentPoints: {
          type: integer,
          format: int64
        },
        endState: {
          type: integer,
          format: int64
        },
        goodInARow: {
          type: integer,
          format: int64
        },
        badInARow: {
          type: integer,
          format: int64
        }
      }
    },
    Question: {
      type: object,
      properties: {
        id: {
          type: integer,
          format: int64
        },
        description: {
          type: string
        },
        options: {
          type: array,
          items: {
            $ref: '#/components/schemas/AnswerOption'
          }
        }
      }
    },
    PlayerAnswer: {
      type: object,
      properties: {
        chosenOption: {
          $ref: '#/components/schemas/AnswerOption'
        }
      }
    },
    AnswerOption: {
      type: object,
      properties: {
        id: {
          type: integer,
          format: int64
        },
        description: {
          type: string
        }
      }
    },
    ErrorDescription: {
      type: object,
      properties: {
        title: {
          type: string
        },
        description: {
          type: string
        }
      }
    }
  }
}
